/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MeditationsRouteImport } from './routes/meditations'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReadNoteIdRouteImport } from './routes/read.$noteId'
import { Route as EditNoteIdRouteImport } from './routes/edit.$noteId'

const MeditationsRoute = MeditationsRouteImport.update({
  id: '/meditations',
  path: '/meditations',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReadNoteIdRoute = ReadNoteIdRouteImport.update({
  id: '/read/$noteId',
  path: '/read/$noteId',
  getParentRoute: () => rootRouteImport,
} as any)
const EditNoteIdRoute = EditNoteIdRouteImport.update({
  id: '/edit/$noteId',
  path: '/edit/$noteId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/meditations': typeof MeditationsRoute
  '/edit/$noteId': typeof EditNoteIdRoute
  '/read/$noteId': typeof ReadNoteIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/meditations': typeof MeditationsRoute
  '/edit/$noteId': typeof EditNoteIdRoute
  '/read/$noteId': typeof ReadNoteIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/meditations': typeof MeditationsRoute
  '/edit/$noteId': typeof EditNoteIdRoute
  '/read/$noteId': typeof ReadNoteIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/meditations' | '/edit/$noteId' | '/read/$noteId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/meditations' | '/edit/$noteId' | '/read/$noteId'
  id: '__root__' | '/' | '/meditations' | '/edit/$noteId' | '/read/$noteId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MeditationsRoute: typeof MeditationsRoute
  EditNoteIdRoute: typeof EditNoteIdRoute
  ReadNoteIdRoute: typeof ReadNoteIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/meditations': {
      id: '/meditations'
      path: '/meditations'
      fullPath: '/meditations'
      preLoaderRoute: typeof MeditationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/read/$noteId': {
      id: '/read/$noteId'
      path: '/read/$noteId'
      fullPath: '/read/$noteId'
      preLoaderRoute: typeof ReadNoteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit/$noteId': {
      id: '/edit/$noteId'
      path: '/edit/$noteId'
      fullPath: '/edit/$noteId'
      preLoaderRoute: typeof EditNoteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MeditationsRoute: MeditationsRoute,
  EditNoteIdRoute: EditNoteIdRoute,
  ReadNoteIdRoute: ReadNoteIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
